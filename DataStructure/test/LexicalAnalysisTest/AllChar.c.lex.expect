Line 3
    enum		keyword
    constVal		identifier
Line 4
    {		delimiter
Line 5
    val1		identifier
    ,		delimiter
Line 6
    val2		identifier
    ,		delimiter
Line 7
    }		delimiter
    ;		delimiter
Line 9
    int		keyword
    _666_		identifier
    ,		delimiter
    _777_		identifier
    ,		delimiter
    ____		identifier
    ;		delimiter
Line 10
    float		keyword
    f		identifier
    ,		delimiter
    ff		identifier
    ,		delimiter
    fff		identifier
    ;		delimiter
Line 11
    char		keyword
    c		identifier
    ;		delimiter
Line 12
    void		keyword
    fun		identifier
    (		delimiter
    void		keyword
    )		delimiter
    ;		delimiter
Line 13
    void		keyword
    *		operator
    ptr		identifier
    ;		delimiter
Line 14
    int		keyword
    *		operator
    *		operator
    *		operator
    ip		identifier
    ;		delimiter
Line 16
    int		keyword
    main		identifier
    (		delimiter
    void		keyword
    )		delimiter
Line 17
    {		delimiter
Line 18
    int		keyword
    i		identifier
    ;		delimiter
Line 20
    i		identifier
    =		operator
    -		operator
    (int)1000		constant
    ;		delimiter
Line 21
    _666_		identifier
    =		operator
    +		operator
    (int)1638		constant
    ;		delimiter
Line 22
    _777_		identifier
    =		operator
    (int)511		constant
    ;		delimiter
Line 23
    f		identifier
    =		operator
    (float)1e9		constant
    +		operator
    (int)7		constant
    ;		delimiter
Line 24
    ff		identifier
    =		operator
    -		operator
    (float)12345.67890		constant
    ;		delimiter
Line 25
    fff		identifier
    =		operator
    (float)1e-306		constant
    ;		delimiter
Line 26
    c		identifier
    =		operator
    (int)66		constant
    ;		delimiter
Line 28
    int		keyword
    a		identifier
    ,		delimiter
    b		identifier
    ,		delimiter
    c		identifier
    ,		delimiter
    d		identifier
    ;		delimiter
Line 30
    c		identifier
    =		operator
    (		delimiter
    a		identifier
    ==		operator
    b		identifier
    )		delimiter
    ?		operator
    c		identifier
    :		delimiter
    d		identifier
    ;		delimiter
Line 31
    if		keyword
    (		delimiter
    a		identifier
    ==		operator
    b		identifier
    &&		operator
    !		operator
    (		delimiter
    c		identifier
    <=		operator
    d		identifier
    ||		operator
    d		identifier
    >=		operator
    c		identifier
    )		delimiter
    )		delimiter
Line 32
    c		identifier
    =		operator
    a		identifier
    <<		operator
    b		identifier
    ;		delimiter
Line 33
    else		keyword
    if		keyword
    (		delimiter
    a		identifier
    !=		operator
    b		identifier
    &&		operator
    a		identifier
    <		operator
    b		identifier
    )		delimiter
Line 34
    d		identifier
    =		operator
    a		identifier
    >>		operator
    b		identifier
    ;		delimiter
Line 35
    else		keyword
    if		keyword
    (		delimiter
    c		identifier
    ==		operator
    d		identifier
    ||		operator
    c		identifier
    >		operator
    b		identifier
    )		delimiter
Line 36
    {		delimiter
Line 37
    d		identifier
    =		operator
    ++		operator
    c		identifier
    ;		delimiter
Line 38
    c		identifier
    =		operator
    --		operator
    d		identifier
    ;		delimiter
Line 39
    b		identifier
    =		operator
    a		identifier
    ++		operator
    ;		delimiter
Line 40
    a		identifier
    =		operator
    b		identifier
    --		operator
    ;		delimiter
Line 41
    }		delimiter
Line 43
    a		identifier
    =		operator
    (		delimiter
    (int)4		constant
    *		operator
    (int)7		constant
    )		delimiter
    /		operator
    (int)2		constant
    +		operator
    (		delimiter
    (int)1		constant
    -		operator
    (int)9		constant
    )		delimiter
    %		operator
    (int)4		constant
    ;		delimiter
Line 45
    char		keyword
    *		operator
    p		identifier
    ;		delimiter
Line 46
    p		identifier
    =		operator
    (		delimiter
    char		keyword
    *		operator
    )		delimiter
    ptr		identifier
    ;		delimiter
Line 48
    *		operator
    p		identifier
    =		operator
    a		identifier
    |		operator
    b		identifier
    ^		operator
    c		identifier
    &		operator
    ~		operator
    d		identifier
    ;		delimiter
Line 49
    p		identifier
    [		operator
    (int)0		constant
    ]		operator
    =		operator
    (int)48		constant
    ;		delimiter
Line 50
    p		identifier
    [		operator
    (int)1		constant
    ]		operator
    =		operator
    sizeof		keyword
    (		delimiter
    char		keyword
    )		delimiter
    ;		delimiter
Line 51
    p		identifier
    =		operator
    "this is a constant string!"		constant
    ;		delimiter
Line 52
    return		keyword
    (int)0		constant
    ;		delimiter
Line 53
    }		delimiter
Line 54
